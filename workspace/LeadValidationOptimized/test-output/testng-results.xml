<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="45931" started-at="2017-06-30T14:29:39Z" finished-at="2017-06-30T14:30:25Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="45931" started-at="2017-06-30T14:29:39Z" finished-at="2017-06-30T14:30:25Z">
      <class name="LeadReportOptimized.LeadValidationOptimized.LeadFlowTesting">
        <test-method status="PASS" signature="startTest()[pri:0, instance:LeadReportOptimized.LeadValidationOptimized.LeadFlowTesting@1c24521]" name="startTest" is-config="true" duration-ms="262" started-at="2017-06-30T19:59:39Z" finished-at="2017-06-30T19:59:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="launch()[pri:0, instance:LeadReportOptimized.LeadValidationOptimized.LeadFlowTesting@1c24521]" name="launch" duration-ms="45390" started-at="2017-06-30T19:59:40Z" finished-at="2017-06-30T20:00:25Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[FAILED]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: FAILED
	at LeadReportOptimized.LeadValidationOptimized.GenericWrappers2.takeSnap(GenericWrappers2.java:1108)
	at LeadReportOptimized.LeadValidationOptimized.GenericWrappers2.clickByXpathClickSelectCity(GenericWrappers2.java:878)
	at LeadReportOptimized.LeadValidationOptimized.LeadFlowTesting.launch(LeadFlowTesting.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:LeadReportOptimized.LeadValidationOptimized.LeadFlowTesting@1c24521]" name="getResult" is-config="true" duration-ms="3" started-at="2017-06-30T20:00:25Z" finished-at="2017-06-30T20:00:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=launch status=FAILURE method=LeadFlowTesting.launch()[pri:0, instance:LeadReportOptimized.LeadValidationOptimized.LeadFlowTesting@1c24521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:LeadReportOptimized.LeadValidationOptimized.LeadFlowTesting@1c24521]" name="endReport" is-config="true" duration-ms="260" started-at="2017-06-30T20:00:25Z" finished-at="2017-06-30T20:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- LeadReportOptimized.LeadValidationOptimized.LeadFlowTesting -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
